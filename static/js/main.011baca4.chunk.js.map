{"version":3,"sources":["App.tsx","components/ListOfGoods/ListOfGoods.tsx","index.tsx"],"names":["SortType","ListOfGoods","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","updatedGoods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","prev","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4CCbQC,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDHjBC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMM,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAaMC,EAzCD,SACLX,EADK,GAGJ,IADCS,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOZ,GAmBzB,OAjBAY,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKX,EAASkB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAOrB,EAASU,SAIlBF,GACFM,EAAaQ,UAGRR,EAkBcS,CACnBlB,EAAiB,CAAEM,WAAUH,eAG/B,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBb,IAAaX,EAASkB,SAAW,GAAK,YACnEQ,QAdqB,kBAAMd,EAAYZ,EAASkB,WAWlD,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBb,IAAaX,EAASoB,OAAS,GAAK,YACpEM,QApBa,kBAAMd,EAAYZ,EAASoB,SAiB1C,4BAQA,wBACEK,KAAK,SACLD,UAAS,4BAAuBhB,EAAa,GAAK,YAClDkB,QAhCa,kBAAMjB,GAAe,SAAAkB,GAAI,OAAKA,MA6B7C,sBAQEhB,IAAaX,EAASU,MAAQF,IAC9B,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QA9CS,WACjBd,EAAYZ,EAASU,MACrBD,GAAc,IAyCR,sBAUJ,6BACE,cAAC,EAAD,CAAaP,MAAOW,UE/G5Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.011baca4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ListOfGoods } from './components/ListOfGoods';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const resetGoods = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const reverseGoods = () => setIsReversed((prev => !prev));\n\n  const sortByAlphabetically = () => setSortType(SortType.ALPHABET);\n\n  const sortByLength = () => setSortType(SortType.LENGTH);\n\n  const updatedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={sortByAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ListOfGoods goods={updatedGoods} />\n      </ul>\n    </div>\n  );\n};\n","import { FC } from 'react';\n\ninterface Props {\n  goods: string[];\n}\n\nexport const ListOfGoods: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}